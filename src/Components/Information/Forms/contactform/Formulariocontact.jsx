import React, { useState } from "react";

import host from "../../../../Control/host";
import dudas from "../../../../database/dudas";
const ContactForm = () => {
  // Estado del formulario
  const [formData, setFormData] = useState({
    nombre: "",
    empresa: "",
    estado: "",
    ciudad: "",
    telefono: "",
   correo: "",
    mensaje: "",
    asunto:"",
  });

  // Estados y ciudades
  const estados = [
    "Aguascalientes",
    "Baja California",
    "Baja California Sur",
    "Campeche",
    "Chiapas",
    "Chihuahua",
    "Ciudad de MÃ©xico",
    "Coahuila",
    "Colima",
    "Durango",
    "Estado de MÃ©xico",
    "Guanajuato",
    "Guerrero",
    "Hidalgo",
    "Jalisco",
    "MichoacÃ¡n",
    "Morelos",
    "Nayarit",
    "Nuevo LeÃ³n",
    "Oaxaca",
    "Puebla",
    "QuerÃ©taro",
    "Quintana Roo",
    "San Luis PotosÃ­",
    "Sinaloa",
    "Sonora",
    "Tabasco",
    "Tamaulipas",
    "Tlaxcala",
    "Veracruz",
    "YucatÃ¡n",
    "Zacatecas",
  ];

  const ciudadesPorEstado = {
    Aguascalientes: ["Aguascalientes", "Calvillo", "JesÃºs MarÃ­a"],
    "Baja California": ["Mexicali", "Tijuana", "Ensenada"],
    "Nuevo LeÃ³n": [
      "Abasolo",
      "Agualeguas",
      "Los Aldamas",
      "Allende",
      "AnÃ¡huac",
      "Apodaca",
      "Aramberri",
      "Bustamante",
      "Cadereyta JimÃ©nez",
      "El Carmen",
      "Cerralvo",
      "CiÃ©nega de Flores",
      "China",
      "Doctor Arroyo",
      "Doctor Coss",
      "Doctor GonzÃ¡lez",
      "Galeana",
      "GarcÃ­a",
      "General Bravo",
      "General Escobedo",
      "General TerÃ¡n",
      "General TreviÃ±o",
      "General Zaragoza",
      "General Zuazua",
      "Guadalupe",
      "Los Herreras",
      "Hidalgo",
      "Higueras",
      "Hualahuises",
      "Iturbide",
      "JuÃ¡rez",
      "Lampazos de Naranjo",
      "Linares",
      "MarÃ­n",
      "Melchor Ocampo",
      "Mier y Noriega",
      "Mina",
      "Montemorelos",
      "Monterrey",
      "ParÃ¡s",
      "PesquerÃ­a",
      "Los Ramones",
      "Rayones",
      "Sabinas Hidalgo",
      "Salinas Victoria",
      "San NicolÃ¡s de los Garza",
      "San Pedro Garza GarcÃ­a",
      "Santa Catarina",
      "Santiago",
      "Vallecillo",
      "Villaldama",
    ],
    // Agrega mÃ¡s estados y ciudades segÃºn sea necesario
  };

  // Manejar cambios en los campos del formulario
  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData({
      ...formData,
      [name]: value,
    });
  };

  // Enviar datos al backend
  const enviarDatos = async (e) => {
    e.preventDefault();
    try {
      const config = {
        method: "POST",
        headers: {
          Accept: "application/json",
          "Content-Type": "application/json",
        },
        body: JSON.stringify(formData),
      };

      const response = await fetch(`http://${host}/`, config);
      console.log(enviarDatos);
      if (!response.ok) {
        throw new Error("Error al enviar los datos");
      }

      // Redirigir o mostrar mensaje de Ã©xito
      // window.location.href = "/";
      alert("se envio correctamente "); // mensaje de envio
    } catch (error) {
      console.error("Error:", error);
      alert(
        "Hubo un error al enviar el formulario. Por favor, intÃ©ntalo de nuevo."
      );
    }
  };

  return (
    
      <div className="contact-content">
        {/* Formulario de contacto */}
        <form className="contact-form" onSubmit={enviarDatos} accept-charset="UTF-8">
          {/* Nombre */}
          <div className="form-group">
            <input
              type="text"
              id="nombre"
              name="nombre"
              placeholder="Escribe tu nombre"
              value={formData.nombre}
              onChange={handleChange}
              required
            />
          </div>

          {/* Empresa */}
          <div className="form-group">
            <input
              type="text"
              id="empresa"
              placeholder="Empresa"
              name="empresa"
              value={formData.empresa}
              onChange={handleChange}
              required
            />
          </div>

          {/* Estado */}
          <div className="form-group">
            <select
              id="estado"
              name="estado"
              value={formData.estado}
              onChange={handleChange}
              required
            >
              {estados.map((estado, index) => (
                <option key={index} value={estado}>
                  {estado}
                </option>
              ))}
            </select>
          </div>

          {/* Ciudad */}
          <div className="form-group">
            <select
              id="ciudad"
              name="ciudad"
              value={formData.ciudad}
              onChange={handleChange}
              required
              disabled={!formData.estado}
            >
              <option value="">Selecciona una ciudad</option>
              {formData.estado &&
                ciudadesPorEstado[formData.estado]?.map((ciudad, index) => (
                  <option key={index} value={ciudad}>
                    {ciudad}
                  </option>
                ))}
            </select>
          </div>

          {/* TelÃ©fono */}
          <div className="form-group">
            <input
              type="tel"
              placeholder="Â¿Cual es tu telefono?"
              id="telefono"
              name="telefono"
              value={formData.telefono}
              onChange={handleChange}
              required
            />
          </div>

          {/* Email */}
          <div className="form-group">
            <input
              type="email"
              placeholder="Escribe tu correo"
              id="correo"
              name="correo"
              value={formData.correo}
              onChange={handleChange}
              required
            />
          </div>

          {/* ASUNTO*/}
          <div className="form-group">
          <select
              id="asunto"
              name="asunto"
              value={formData.asunto}
              onChange={handleChange}
              required
              
            >
              <option value="">Â¿Que servicio requiere?</option>
              {dudas.map((dudas, index) => (
                <option key={index} value={dudas}>
                  {dudas}
                </option>
              ))}
            </select>
          </div>

          {/* Mensaje */}
          <div className="form-group">
            <label htmlFor="mensaje">
              Cuentanos un poco sobre tu proyecto ðŸ˜€
            </label>
            <textarea
              id="mensaje"
              name="mensaje"
              value={formData.mensaje}
              onChange={handleChange}
              required
            />
          </div>

          {/* BotÃ³n de enviar */}
          <button type="submit" className="submit-button">
            Enviar
          </button>
        </form>
      </div>
   
  );
};

export default ContactForm;
